'use client';

import { useState, useEffect } from 'react';
import { supabase } from '@/lib/supabase';
import Link from 'next/link';
import toast from 'react-hot-toast';

interface Product {
  id: string;
  name: string;
  description: string | null;
  price: number;
  stock: number;
  promo: number | null;
  is_best_seller: boolean;
  images: string[];
  category_id: string | null;
}

interface Category {
  id: string;
  name: string;
}

export default function HomePage() {
  const [products, setProducts] = useState<Product[]>([]);
  const [categories, setCategories] = useState<Category[]>([]);
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const [loading, setLoading] = useState(true);
  const [searchTerm, setSearchTerm] = useState('');

  useEffect(() => {
    fetchData();
  }, []);

  const fetchData = async () => {
    try {
      setLoading(true);

      // Fetch categories
      const { data: categoriesData } = await supabase
        .from('categories')
        .select('id, name')
        .eq('is_active', true)
        .order('name');

      // Fetch products
      const { data: productsData } = await supabase
        .from('products')
        .select('*')
        .eq('is_active', true)
        .gt('stock', 0)
        .order('created_at', { ascending: false });

      if (categoriesData) setCategories(categoriesData);
      if (productsData) setProducts(productsData);
    } catch (error) {
      console.error('Error fetching data:', error);
      toast.error('Failed to load products');
    } finally {
      setLoading(false);
    }
  };

  const getImageUrl = (imagePath: string) => {
    if (!imagePath) return '/assets/placeholder-product.jpg';
    
    if (imagePath.startsWith('http')) {
      return imagePath;
    }
    
    const { data } = supabase.storage
      .from('product-images')
      .getPublicUrl(imagePath);
    
    return data.publicUrl || '/assets/placeholder-product.jpg';
  };

  const filteredProducts = products.filter(product => {
    const matchesCategory = selectedCategory === 'all' || product.category_id === selectedCategory;
    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  const bestSellers = products.filter(p => p.is_best_seller).slice(0, 4);

  const calculateFinalPrice = (price: number, promo: number | null) => {
    if (!promo || promo <= 0) return price;
    return price - (price * promo / 100);
  };

  return (
    <div className="min-vh-100">
      {/* Navigation */}
      <nav className="navbar navbar-expand-lg navbar-light bg-white shadow-sm sticky-top">
        <div className="container">
          <Link href="/" className="navbar-brand fw-bold text-primary">
            <i className="bi bi-shop me-2"></i>
            Abdesadek Shop
          </Link>
          <button 
            className="navbar-toggler" 
            type="button" 
            data-bs-toggle="collapse" 
            data-bs-target="#navbarNav"
          >
            <span className="navbar-toggler-icon"></span>
          </button>
          <div className="collapse navbar-collapse" id="navbarNav">
            <ul className="navbar-nav ms-auto">
              <li className="nav-item">
                <Link href="/" className="nav-link active">Home</Link>
              </li>
              <li className="nav-item">
                <Link href="#products" className="nav-link">Products</Link>
              </li>
              <li className="nav-item">
                <Link href="/cart" className="nav-link">
                  <i className="bi bi-cart3 me-1"></i>
                  Cart
                  <span className="badge bg-primary ms-1">0</span>
                </Link>
              </li>
            </ul>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <section className="bg-primary text-white py-5">
        <div className="container">
          <div className="row align-items-center">
            <div className="col-lg-6">
              <h1 className="display-4 fw-bold mb-3">Welcome to Abdesadek Shop</h1>
              <p className="lead mb-4">
                Premium Quality Products with Fast Delivery Across Morocco
              </p>
              <a href="#products" className="btn btn-light btn-lg">
                <i className="bi bi-bag-check me-2"></i>
                Shop Now
              </a>
            </div>
            <div className="col-lg-6 d-none d-lg-block">
              <div className="text-center">
                <i className="bi bi-shop" style={{ fontSize: '200px', opacity: 0.2 }}></i>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Best Sellers */}
      {bestSellers.length > 0 && (
        <section className="py-5 bg-light">
          <div className="container">
            <h2 className="text-center mb-4">
              <i className="bi bi-star-fill text-warning me-2"></i>
              Best Sellers
            </h2>
            <div className="row g-4">
              {bestSellers.map((product) => {
                const finalPrice = calculateFinalPrice(product.price, product.promo);
                return (
                  <div key={product.id} className="col-md-6 col-lg-3">
                    <div className="card h-100 shadow-sm">
                      {product.promo && product.promo > 0 && (
                        <div className="position-absolute top-0 end-0 m-2">
                          <span className="badge bg-danger">-{product.promo}%</span>
                        </div>
                      )}
                      <img
                        src={getImageUrl(product.images?.[0])}
                        className="card-img-top"
                        alt={product.name}
                        style={{ height: '200px', objectFit: 'cover' }}
                      />
                      <div className="card-body">
                        <h5 className="card-title">{product.name}</h5>
                        <div className="mb-2">
                          {product.promo && product.promo > 0 ? (
                            <>
                              <span className="text-decoration-line-through text-muted me-2">
                                {product.price.toFixed(2)} MAD
                              </span>
                              <span className="text-success fw-bold">
                                {finalPrice.toFixed(2)} MAD
                              </span>
                            </>
                          ) : (
                            <span className="fw-bold">{product.price.toFixed(2)} MAD</span>
                          )}
                        </div>
                        <Link href={`/product/${product.id}`} className="btn btn-primary w-100">
                          View Details
                        </Link>
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        </section>
      )}

      {/* Products Section */}
      <section id="products" className="py-5">
        <div className="container">
          <h2 className="text-center mb-4">Our Products</h2>

          {/* Search and Filter */}
          <div className="row mb-4">
            <div className="col-md-6 mb-3">
              <input
                type="text"
                className="form-control"
                placeholder="Search products..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
            <div className="col-md-6 mb-3">
              <select
                className="form-select"
                value={selectedCategory}
                onChange={(e) => setSelectedCategory(e.target.value)}
              >
                <option value="all">All Categories</option>
                {categories.map((category) => (
                  <option key={category.id} value={category.id}>
                    {category.name}
                  </option>
                ))}
              </select>
            </div>
          </div>

          {/* Products Grid */}
          {loading ? (
            <div className="text-center py-5">
              <div className="spinner-border text-primary" role="status">
                <span className="visually-hidden">Loading...</span>
              </div>
            </div>
          ) : filteredProducts.length > 0 ? (
            <div className="row g-4">
              {filteredProducts.map((product) => {
                const finalPrice = calculateFinalPrice(product.price, product.promo);
                return (
                  <div key={product.id} className="col-md-6 col-lg-4 col-xl-3">
                    <div className="card h-100 shadow-sm hover-shadow">
                      {product.promo && product.promo > 0 && (
                        <div className="position-absolute top-0 end-0 m-2">
                          <span className="badge bg-danger">-{product.promo}%</span>
                        </div>
                      )}
                      {product.is_best_seller && (
                        <div className="position-absolute top-0 start-0 m-2">
                          <span className="badge bg-warning">
                            <i className="bi bi-star-fill"></i>
                          </span>
                        </div>
                      )}
                      <img
                        src={getImageUrl(product.images?.[0])}
                        className="card-img-top"
                        alt={product.name}
                        style={{ height: '250px', objectFit: 'cover' }}
                      />
                      <div className="card-body d-flex flex-column">
                        <h5 className="card-title">{product.name}</h5>
                        {product.description && (
                          <p className="card-text text-muted small flex-grow-1">
                            {product.description.substring(0, 80)}
                            {product.description.length > 80 && '...'}
                          </p>
                        )}
                        <div className="mb-3">
                          {product.promo && product.promo > 0 ? (
                            <>
                              <span className="text-decoration-line-through text-muted me-2">
                                {product.price.toFixed(2)} MAD
                              </span>
                              <br />
                              <span className="text-success fw-bold fs-5">
                                {finalPrice.toFixed(2)} MAD
                              </span>
                            </>
                          ) : (
                            <span className="fw-bold fs-5">{product.price.toFixed(2)} MAD</span>
                          )}
                        </div>
                        <Link 
                          href={`/product/${product.id}`} 
                          className="btn btn-primary w-100"
                        >
                          <i className="bi bi-eye me-2"></i>
                          View Details
                        </Link>
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          ) : (
            <div className="text-center py-5">
              <i className="bi bi-search display-1 text-muted"></i>
              <h3 className="mt-3">No products found</h3>
              <p className="text-muted">Try adjusting your search or filter</p>
            </div>
          )}
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-dark text-white py-4 mt-5">
        <div className="container">
          <div className="row">
            <div className="col-md-4 mb-3">
              <h5 className="mb-3">Abdesadek Shop</h5>
              <p className="text-muted">
                Premium quality products with fast delivery across Morocco
              </p>
            </div>
            <div className="col-md-4 mb-3">
              <h5 className="mb-3">Quick Links</h5>
              <ul className="list-unstyled">
                <li><Link href="/" className="text-muted text-decoration-none">Home</Link></li>
                <li><Link href="#products" className="text-muted text-decoration-none">Products</Link></li>
                <li><Link href="/cart" className="text-muted text-decoration-none">Cart</Link></li>
              </ul>
            </div>
            <div className="col-md-4 mb-3">
              <h5 className="mb-3">Contact</h5>
              <p className="text-muted">
                <i className="bi bi-envelope me-2"></i>
                contact@abdesadekshop.ma
              </p>
              <p className="text-muted">
                <i className="bi bi-phone me-2"></i>
                +212 XXX-XXXXXX
              </p>
            </div>
          </div>
          <hr className="bg-secondary" />
          <div className="text-center text-muted">
            <p className="mb-0">&copy; 2025 Abdesadek Shop. All rights reserved.</p>
          </div>
        </div>
      </footer>

      <style jsx>{`
        .hover-shadow {
          transition: all 0.3s ease;
        }
        .hover-shadow:hover {
          transform: translateY(-5px);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        }
      `}</style>
    </div>
  );
}
          </div>
        </div>
      </footer>

      <style jsx>{`
        .hover-shadow {
          transition: all 0.3s ease;
        }
        .hover-shadow:hover {
          transform: translateY(-5px);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        }
      `}</style>
    </div>
  );
}
            <p className="card-text">Test different notification types:</p>
            <div className="d-grid gap-2">
              <Button variant="success" onClick={() => showToast('success')}>
                <i className="bi bi-check-circle me-2"></i>Success Toast
              </Button>
              <Button variant="danger" onClick={() => showToast('error')}>
                <i className="bi bi-x-circle me-2"></i>Error Toast
              </Button>
              <Button variant="info" onClick={() => showToast('info')}>
                <i className="bi bi-info-circle me-2"></i>Info Toast
              </Button>
            </div>
          </Card>
        </div>

        {/* Bootstrap Components */}
        <div className="col-md-6 col-lg-4">
          <Card title="Bootstrap 5 Components">
            <p className="card-text">Beautiful UI components with Bootstrap Icons:</p>
            <div className="d-flex flex-wrap gap-2 mb-3">
              <span className="badge bg-primary">
                <i className="bi bi-star me-1"></i>Primary
              </span>
              <span className="badge bg-success">
                <i className="bi bi-check me-1"></i>Success
              </span>
              <span className="badge bg-warning">
                <i className="bi bi-exclamation me-1"></i>Warning
              </span>
            </div>
            <div className="progress mb-2">
              <div className="progress-bar" style={{ width: '75%' }}>75%</div>
            </div>
            <small className="text-muted">Progress bar example</small>
          </Card>
        </div>

        {/* Chart Controls */}
        <div className="col-md-6 col-lg-4">
          <Card title="Recharts Analytics">
            <p className="card-text">Switch between different chart types:</p>
            <div className="d-grid gap-2">
              <Button 
                variant={chartType === 'bar' ? 'primary' : 'secondary'}
                onClick={() => setChartType('bar')}
              >
                <i className="bi bi-bar-chart me-2"></i>Bar Chart
              </Button>
              <Button 
                variant={chartType === 'line' ? 'primary' : 'secondary'}
                onClick={() => setChartType('line')}
              >
                <i className="bi bi-graph-up me-2"></i>Line Chart
              </Button>
              <Button 
                variant={chartType === 'pie' ? 'primary' : 'secondary'}
                onClick={() => setChartType('pie')}
              >
                <i className="bi bi-pie-chart me-2"></i>Pie Chart
              </Button>
            </div>
          </Card>
        </div>
      </div>

      {/* Swiper Carousel */}
      <div className="row mb-5">
        <div className="col-12">
          <Card title="Swiper.js Carousel">
            <Carousel slides={carouselSlides} />
          </Card>
        </div>
      </div>

      {/* Analytics Chart */}
      <div className="row mb-5">
        <div className="col-12">
          <AnalyticsChart 
            data={chartData} 
            type={chartType}
            title={`Sample ${chartType.charAt(0).toUpperCase() + chartType.slice(1)} Chart`}
          />
        </div>
      </div>

      {/* Supabase Authentication */}
      <div className="row mb-5">
        <div className="col-md-6 mx-auto">
          <AuthComponent />
        </div>
      </div>

      {/* Footer */}
      <footer className="text-center py-4 border-top">
        <div className="d-flex justify-content-center gap-3 mb-3">
          <a
            href="/admin"
            className="btn btn-outline-dark"
          >
            <i className="bi bi-gear me-2"></i>Admin Panel
          </a>
          <a
            href="https://nextjs.org/docs"
            target="_blank"
            rel="noopener noreferrer"
            className="btn btn-outline-primary"
          >
            <i className="bi bi-book me-2"></i>Next.js Docs
          </a>
          <a
            href="https://supabase.com/docs"
            target="_blank"
            rel="noopener noreferrer"
            className="btn btn-outline-success"
          >
            <i className="bi bi-database me-2"></i>Supabase Docs
          </a>
          <a
            href="https://getbootstrap.com/docs/"
            target="_blank"
            rel="noopener noreferrer"
            className="btn btn-outline-info"
          >
            <i className="bi bi-bootstrap me-2"></i>Bootstrap Docs
          </a>
        </div>
        <p className="text-muted mb-0">
          Built with ❤️ using Next.js 14, Supabase, Bootstrap 5, and more!
        </p>
      </footer>
    </div>
  );
}
